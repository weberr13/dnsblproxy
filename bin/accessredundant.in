#!PERL_PATH
use DB_File;
use DB_File::Lock;
use Fcntl ':flock';

if ( $#ARGV > 0 ) {

	print "usage accessredundant\n";

}

$PREFIX = "INSTALL_PREFIX";
$DBFILE = join("/",$PREFIX,"lib/accessdbm.db");
#$accessdb = tie(%accessdb, 'DB_File', $DBFILE, O_CREAT|O_RDWR, 0664) or die "Can't Open db $DBFILE: $!\n";
#$fd = $accessdb->fd;
#open(DB_FH, "+<&=$fd") or die "dup $!";
#
#unless (flock (DB_FH, LOCK_SH | LOCK_NB )) {
#        print "$$: CONTENTION; Can't read during write update!
#                Waiting for write lock ($!) ....";
#        unless (flock (DB_FH, LOCK_SH)) { die "flock: $!" }
#}
$accessdb = tie(%accessdb, 'DB_File::Lock', $DBFILE, O_CREAT|O_RDWR, 0664, $DB_HASH, 'write') or die;

$DBFILE_BAK = "/tmp/accessdbm.db.accessredundant.$$";
`cp $DBFILE $DBFILE_BAK`;

undef $accessdb;
untie %accessdb;

$accessdb = tie(%accessdb, 'DB_File::Lock', $DBFILE_BAK, O_CREAT|O_RDWR, 0664, $DB_HASH, 'write') or die;

while ( ($key,$val) = each %accessdb ) {
	        @fields = split(/\./,$key);
		if (! defined $fields[2] ) {
			$bclass=join(".",$fields[0],$fields[1]);
			$bclasses{$bclass} = "blocked";
		} elsif (! defined $fields[3] ) {
			$cclass=join(".",$fields[0],$fields[1],$fields[2]);
			$cclasses{$cclass} = "blocked";
		} else {
		}
}
while ( ($key,$val) = each %accessdb ) {
	        @fields = split(/\./,$key);
		if (! defined $fields[2] ) {
#			$bclass=join(".",$fields[0],$fields[1]);
#			$bclasses{$bclass} = "blocked";
		} elsif (! defined $fields[3] ) {
			$bclass=join(".",$fields[0],$fields[1]);
			if ( defined $bclasses{$bclass} ) {
				print "delentry $key $val\n"
			}
		} else {
			$bclass=join(".",$fields[0],$fields[1]);
			$cclass=join(".",$fields[0],$fields[1],$fields[2]);
			if ( defined $bclasses{$bclass} || defined $cclasses{$cclass} ) {
				print "delentry $key $val\n"
			}
		}
}


flock(DB_FH, LOCK_UN);
undef $accessdb;
untie %accessdb;
close(DB_FH);

`rm $DBFILE_BAK $DBFILE_BAK.lock`;
