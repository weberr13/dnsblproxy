#!PERL_PATH
use IO::Pipe;
use DB_File;
use DB_File::Lock;
use Fcntl ':flock';
use Time::localtime;
use Net::hostent;
use Socket;


$NSUPDATE = "/usr/local/bind/bin/nsupdate";
$TEMPDIR = "/tmp/dnsblmanager";
$DOMAIN = "bl.colorado.edu.";
$PREFIX = "INSTALL_PREFIX";
$DBFILE = join("/",$PREFIX,"lib/accessdbm.db");
@lists=("combined.njabl.org","bl.spamcop.net","sbl-xbl.spamhaus.org","dnsbl.sorbs.net","list.dsbl.org","l2.spews.dnsbl.sorbs.net");

$use_spews="no";

sub usage {
	print "Usage: dnsblmanager [-l ###] [-s ###]\n";
	exit 1;
} 
sub runnsupdate {
                foreach $file ( @_ ) {
                 do {
                  $exit = system "$NSUPDATE < $file 2>&1 | grep Communication";
                 } while ( $exit == 0 );
                }
}
#sub checkoutdb {
# returns the reference to the db
#	$accessdb = tie(%accessdb, 'DB_File::Lock', $DBFILE, O_CREAT|O_RDWR, 0664, $DB_HASH, 'write') or die "Cannot open file\n";
#	return \%accessdb;
#}
#sub checkindb {
# closes/unlocks the db passed as a reference
#	untie $$_[0];
#}
sub checkallbl {
	chomp($_[0]);
	my @fields = split(/\./,$_[0]);
	foreach $list ( @lists ) {
		my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0],$list);
		if (gethostbyname($address)) {
			return (1,"on dnsbl $list");
		}
	}
	return (0,"");
}	
sub checkbl {
	chomp($_[0]);
	my @fields = split(/\./,$_[0]);
		my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0],$_[1]);
		if (gethostbyname($address)) {
			return (1,"on dnsbl $_[1]");
		}
	return (0,"");
}	

	

$threshold = 255;
$spamthresh = 255;
while ( $#ARGV >= 0 ) {
	if ( $ARGV[0] =~ /-l/ ) {
		if ( defined $ARGV[1] ) {
		if ( $ARGV[1] =~ /([0-9]+)/ ) {
			$newthresh = $1;
			if ( $newthresh < $threshold ) { 
				$threshold = $newthresh;
			}
			shift @ARGV; shift @ARGV;
		} else {
			usage;
		} } else { usage; }
	} elsif ( $ARGV[0] =~ /-s/ ) {
		if ( defined $ARGV[1] ) {
		if ( $ARGV[1] =~ /([0-9]+)/ ) {
			$newthresh = $1;
			if ( $newthresh < $spamthresh ) { 
				$spamthresh = $newthresh;
			}
			shift; shift;
		} else {
			usage;
		} } else { usage; }
	} else { usage; }
	
}
			
		
if ( ! -d $TEMPDIR ) {
                system "rm -rf $TEMPDIR";
                mkdir("$TEMPDIR",0777);
                system "chgrp access $TEMPDIR";
                system "chmod 2770 $TEMPDIR";
}
chdir($TEMPDIR);
unlink(whitelist.$$);
unlink(blacklist.$$);
open(WL_FILE, ">whitelist.$$");
open(BL_FILE, ">blacklist.$$");
open(LOG_FILE, ">logfile.$$");
printf BL_FILE "server bl.colorado.edu.\n";
printf WL_FILE "server bl.colorado.edu.\n";
printf BL_FILE "zone bl.colorado.edu.\n";
printf WL_FILE "zone bl.colorado.edu.\n";

open(INPIPE,"-");

my %iplist;
my %spamsources;
$date = join("-",localtime->mon()+1,localtime->mday(),localtime->year() + 1900);	
while (<INPIPE>) {
	$datenew = join("-",localtime->mon()+1,localtime->mday(),localtime->year() + 1900);	
	if ( $datenew != $date ) {
		%spamsources = ();
		$date = $datenew;
	}
	if ( /Spamassassin spam source/ ) {
		my @ip = split(" ",$_);
		if ( defined $ip[11] ) { 
		$iplist{$ip[11]} = "Spamassassin spam source $date";
		if ( ! defined $spamsources{$ip[11]} )  {
			$spamsources{$ip[11]} = 1;
		} else {
			$spamsources{$ip[11]} += 1;
		}
		}
		#print LOG_FILE "$iplist{$ip[11]}\n";
	}
	if ( /Virus spam source/ ) {
		my @ip = split(" ",$_);
		if ( defined $ip[11] ) { 
		$iplist{$ip[11]} = "Virus source $date";
		}
		#print LOG_FILE "$iplist{$ip[11]}\n";
	}
	if ( /HELO/ ) {
		my @helo_total = split('HELO\.',$_);
		my @helo = split(".---.",$helo_total[1]);
		if ( defined $helo[1] ) {
		chomp($helo[1]);
		if ( $helo[1] !~ /(^128\.138)|(127.0.0.1)|(^0$)/ ) {
		if ( $helo[0] =~ /(([0-9]{1,3}\.[0-9]{1,3})|([0-9]{1,3}\-[0-9]{1,3}\-)|([0-9]{1,3}\_[0-9]{1,3})|([0-9]{6})|[0-9][0-9].*adsl|[0-9][0-9].*dial|[0-9][0-9].*client|[0-9][0-9].*dynamic|[0-9][0-9].*dsl|[0-9][0-9].*cable|[0-9][0-9].*user|^pc[0-9]|^cm[0-9])/i ) {
			if ( ! defined $iplist{$helo[1]} ) {
			$iplist{$helo[1]} = "DSL spam source $date as $helo[0]";
			##print LOG_FILE "$iplist{$helo[1]}\n";
			}
		}
		elsif ( $helo[0] !~ /(.*\..*)/ ) {
			if ( ! defined $iplist{$helo[1]} ) {
			$iplist{$helo[1]} = "NFQDN spam source $date as $helo[0]";
			#print LOG_FILE "$iplist{$helo[1]}\n";
			}
		} elsif ( $helo[0] =~ /(^yahoo\.com$|^hotmail\.com$|^mail\.com$|^msn\.com$|^microsoft\.com$|^mailcity\.com$|\.colorado\.edu|outkicking\.biz)/i ) {
			if ( ! defined $iplist{$ip[1]} ) {
			$iplist{$helo[1]} = "Bogus HELO spam source $date as $helo[0]";
			#print LOG_FILE "$iplist{$helo[1]}\n";
			}
		}
		elsif ( $helo[0] =~ /(^[-a-zA-Z0-9]*smtp|^[-a-zA-Z0-9]*mail|^[-a-zA-Z0-9]*mx|^[-a-zA-Z0-9]*ns|[-a-zA-Z0-9]*server|\.edu$|\.mail\.|[-a-zA-Z0-9]*www|[-a-zA-Z0-9]*mta|[-a-zA-Z0-9]*out|[-a-zA-Z0-9]*web|\.mx\.|[-a-zA-Z0-9]*proxy|\.bulk\.|[-a-zA-Z0-9]*pop|^[-a-zA-Z0-9]*list|\.smtp\.|^[-a-zA-Z0-9]*exchange)/i  ) {
			if ( $helo[0] !~ /(\.info$|\.biz$)/ ) {
			if ( ! defined $iplist{$helo[1]} ) {
				$iplist{$helo[1]} = "OK AUTO $date as $helo[0]";
			}
			}
		} else {
			if ( ! defined $iplist{$helo[1]} ) {
				$iplist{$helo[1]} = "GREY $date as $helo[0]";
			}
		#	#print LOG_FILE "HELOgrey $helo[1] $helo[0]\n";
		}
		}
		}
	}
	if ( /RDNS/ ) {
		my @ip = split('RDNS.Fix.reverse.DNS.for.',$_);
		if ( defined $ip[1] ) {
			chomp($ip[1]);
			if ( ! defined $iplist{$ip[1]} ) {
			$iplist{$ip[1]} = "RDNS spam source $date";
			#print LOG_FILE "$iplist{$ip[1]}\n";
			}
		}
	}
	if ( keys %iplist > $threshold ) {
	while ( ($key,$val) = each %iplist ) {
		$accessdb = tie(%accessdb, 'DB_File::Lock', $DBFILE, O_CREAT|O_RDWR, 0664, $DB_HASH, 'write') or die "Cannot open file\n";
  		@keys = split(/\./,$key);
		$cclass = join(".",$keys[0],$keys[1],$keys[2]);
		if ( $val !~ /^OK/ && $val !~ /^GREY/ ) {
			if ( ! defined $accessdb{$key} && ! defined $accessdb{$cclass} ) {
				($listed,$comment) = checkallbl($key);
				if ( $listed == 1 ) { 
					if ( defined $spamsources{$key}	) {
						delete $spamsources{$key};
					}
					$realval = join(" ",$val,$comment);
					$accessdb{$key}= $realval;
					if ( $accessdb{$key} != $realval )
{
					print LOG_FILE "DATABASE corrupt\n"; 
} else {
					print LOG_FILE "b $key $accessdb{$key}\n"; 
					my @fields = split(/\./,$key);
					my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0]);
					
					printf BL_FILE "update add %s.%s 300     IN A    127.0.0.2\n", $address,$DOMAIN;
}
				} elsif ( defined $spamsources{$key} ) {
 				 if (  $spamsources{$key} > $spamthresh ){
					$realval = join(" ",$val,"on volume");
					$accessdb{$key}= $realval;
					if ( $accessdb{$key} != $realval )
{
					print LOG_FILE "DATABASE corrupt\n"; 
} else {
					print LOG_FILE "b $key $accessdb{$key}\n"; 
					my @fields = split(/\./,$key);
					my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0]);
					printf BL_FILE "update add %s.%s 300     IN A    127.0.0.2\n", $address,$DOMAIN;
}
				}
				}

			}
		} elsif ( $val =~ /^GREY/ ) {
# check spamhaus only to see if we should block the machine
			if ( ! defined $accessdb{$key} && ! defined $accessdb{$cclass} ) {
				($listed,$comment) = checkbl($key,"sbl.spamhaus.org");
				if ( $listed == 1 ) { 
					if ( defined $spamsources{$key}	) {
						delete $spamsources{$key};
					}
					@val = split(" ",$val);
					$realval = join(" ","SPAMHAUS ",$val[1],$val[2],$val[3],$comment);
					$accessdb{$key}= $realval;
					if ( $accessdb{$key} != $realval )
{
					print LOG_FILE "DATABASE corrupt\n"; 
} else {
					print LOG_FILE "b $key $accessdb{$key}\n"; 
					my @fields = split(/\./,$key);
					my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0]);
					
					printf BL_FILE "update add %s.%s 300     IN A    127.0.0.2\n", $address,$DOMAIN;
}
				} else {
# check spews only to see if we should block the machine
				if ( $use_spews =~ /yes/i ) {
				($listed,$comment) = checkbl($key,"l2.spews.dnsbl.sorbs.net");
				if ( $listed == 1 ) { 
					if ( defined $spamsources{$key}	) {
						delete $spamsources{$key};
					}
					@val = split(" ",$val);
					$realval = join(" ","SPEWS ",$val[1],$val[2],$val[3],$comment);
					$accessdb{$key}= $realval;
					if ( $accessdb{$key} != $realval )
{
					print LOG_FILE "DATABASE corrupt\n"; 
} else {
					print LOG_FILE "b $key $accessdb{$key}\n"; 
					my @fields = split(/\./,$key);
					my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0]);
					
					printf BL_FILE "update add %s.%s 300     IN A    127.0.0.2\n", $address,$DOMAIN;
}
				}
				}

				}
				}

} else {
			if ( ! defined $accessdb{$key} && defined $accessdb{$cclass} ) {
				if ( $accessdb{$cclass} !~ /^OK/ ) {
				($listed,$comment) = checkallbl($key);
				if ( $listed == 0 ) {
					@helo = split(" ",$val);
                        		my $h=(gethostbyname($helo[4]));
					if ( defined $h ) {
                        		 my $addr = inet_ntoa($h->addr);
					 if ($addr == $key ) {
					  $accessdb{$key}= $val;
					if ( $accessdb{$key} != $val )
{
					print LOG_FILE "DATABASE corrupt\n"; 
} else {
					  print LOG_FILE "w $key $accessdb{$key}\n"; 
					  my @fields = split(/\./,$key);
					  my $address=join(".",$fields[3],$fields[2],$fields[1],$fields[0]);
					  printf WL_FILE "update add %s.%s 300     IN A  127.0.0.128\n", $address,$DOMAIN;
}
					 }
					}
				}
				}
			}
		}
		delete $iplist{$key};
		untie %accessdb;
		undef $accessdb;
                printf BL_FILE "send\n";
                printf WL_FILE "send\n";
                runnsupdate("blacklist.$$","whitelist.$$");
                close(WL_FILE);
                close(BL_FILE);
                open(WL_FILE, ">whitelist.$$");
                open(BL_FILE, ">blacklist.$$");
                printf BL_FILE "server bl.colorado.edu.\n";
                printf WL_FILE "server bl.colorado.edu.\n";
                printf BL_FILE "zone bl.colorado.edu.\n";
                printf WL_FILE "zone bl.colorado.edu.\n";
		}
	}
}
print LOG_FILE "input pipe lost\n"; 
close(LOG_FILE);

